version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: signal-bot-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - signal-bot-network

  redis:
    image: redis:7-alpine
    container_name: signal-bot-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - signal-bot-network

  signal-bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: signal-bot-app
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./signals:/app/signals
      - ./backtest-results:/app/backtest-results
      - ./.env:/app/.env:ro

    ports:
      - "3000:3000"

    networks:
      - signal-bot-network

    depends_on:
      - postgres
      - redis

  grafana:
    image: grafana/grafana:latest
    container_name: signal-bot-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-grafana_password_123}
      GF_USERS_ALLOW_SIGN_UP: 'false'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    networks:
      - signal-bot-network
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  grafana_data:
    driver: local

networks:
  signal-bot-network:
    driver: bridge